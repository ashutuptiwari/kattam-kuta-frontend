{"ast":null,"code":"var _jsxFileName = \"E:\\\\Comding\\\\kattam-kutta\\\\src\\\\components\\\\game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./game.css\";\nimport sendMove from \"../api/sendMove\";\nimport getMove from \"../api/getMove\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\n  const [move, setMove] = useState(0);\n  const [playFirst, setPlayfirst] = useState(\"None\");\n  const [disabledButton1, setDisabledButton1] = useState(false);\n  const [disabledButton2, setDisabledButton2] = useState(false);\n  useEffect(() => {\n    console.log(\"board updated\", board);\n  }, [board]);\n  useEffect(() => {\n    if (move === 0) {\n      setDisabledButton1(false);\n      setDisabledButton2(false);\n      setPlayfirst(\"None\");\n    }\n  }, [move]);\n  useEffect(() => {\n    sendMove(-1, -1, -1);\n  }, []);\n  const handlePlaySecond = async () => {\n    console.log(\"new move fetched!!\");\n    setMove(move + 1);\n    const updatedBoard = [...board];\n    const response2 = await getMove();\n    if (response2 && response2.data) {\n      let r = response2.data.row;\n      let c = response2.data.col;\n      updatedBoard[r][c] = 2;\n      setBoard(updatedBoard);\n      if (response2) {\n        if (response2.data.termination !== -1) {\n          setTimeout(() => {\n            setBoard([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\n            setMove(0);\n          }, 2000);\n          return;\n        }\n      }\n    }\n  };\n  const handleCellClick = async (row, col) => {\n    if (board[row][col] !== 0) {\n      alert(\"andha hai kya laude\");\n      return;\n    }\n    if (playFirst === \"None\") {\n      alert(\"choose bitch!\");\n      return;\n    } else if (playFirst === \"user\" || playFirst === \"agent\") {\n      setMove(move + 1);\n      const response1 = await sendMove(row, col, move);\n      const updatedBoard = [...board];\n      updatedBoard[row][col] = 1; // 1 for 'O', 2 for 'X'\n      if (response1) {\n        if (response1.data.termination !== -1) {\n          setTimeout(() => {\n            setBoard([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\n            setMove(0);\n          }, 1000);\n          return;\n        }\n      }\n      console.log(\"new move fetched!!\");\n      setMove(move + 1);\n      const response2 = await getMove();\n      if (response2 && response2.data) {\n        let r = response2.data.row;\n        let c = response2.data.col;\n        updatedBoard[r][c] = 2;\n        setBoard(updatedBoard);\n        if (response2) {\n          if (response2.data.termination !== -1) {\n            setTimeout(() => {\n              setBoard([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\n              setMove(0);\n            }, 1000);\n            return;\n          }\n        }\n      }\n    } else {\n      alert(\"developer iss game ka chutiya hai\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${disabledButton1 ? \"disabled\" : \"\"}`,\n        onClick: () => {\n          setPlayfirst(\"user\");\n          setDisabledButton2(true);\n        },\n        disabled: disabledButton1,\n        children: \"Play First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button ${disabledButton2 ? \"disabled\" : \"\"}`,\n        onClick: () => {\n          if (!disabledButton2) {\n            setPlayfirst(\"agent\");\n            handlePlaySecond();\n            setDisabledButton1(true);\n          }\n        },\n        disabled: disabledButton2,\n        children: \"Play Second\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-grid\",\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${cell === 1 ? \"circle\" : cell === 2 ? \"cross\" : \"\"}`,\n            onClick: () => handleCellClick(rowIndex, colIndex),\n            children: [cell === 1 && \"O\", cell === 2 && \"X\"]\n          }, colIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"iQQlUG2tlULLwT7CV8+jppcYL4s=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","sendMove","getMove","jsxDEV","_jsxDEV","Game","_s","board","setBoard","Array","fill","move","setMove","playFirst","setPlayfirst","disabledButton1","setDisabledButton1","disabledButton2","setDisabledButton2","console","log","handlePlaySecond","updatedBoard","response2","data","r","row","c","col","termination","setTimeout","handleCellClick","alert","response1","children","id","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","cell","colIndex","_c","$RefreshReg$"],"sources":["E:/Comding/kattam-kutta/src/components/game.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./game.css\";\r\nimport sendMove from \"../api/sendMove\";\r\nimport getMove from \"../api/getMove\";\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = useState<number[][]>([\r\n    Array(3).fill(0),\r\n    Array(3).fill(0),\r\n    Array(3).fill(0),\r\n  ]);\r\n  const [move, setMove] = useState(0);\r\n  const [playFirst, setPlayfirst] = useState(\"None\");\r\n  const [disabledButton1, setDisabledButton1] = useState(false);\r\n  const [disabledButton2, setDisabledButton2] = useState(false);\r\n  useEffect(() => {\r\n    console.log(\"board updated\", board);\r\n  }, [board]);\r\n  useEffect(() => {\r\n    if (move === 0) {\r\n      setDisabledButton1(false);\r\n      setDisabledButton2(false);\r\n      setPlayfirst(\"None\");\r\n    }\r\n  }, [move]);\r\n\r\n  useEffect(() => {\r\n    sendMove(-1, -1, -1);\r\n  }, []);\r\n  const handlePlaySecond = async()=>{\r\n    console.log(\"new move fetched!!\");\r\n      setMove(move + 1);\r\n      const updatedBoard = [...board];\r\n      const response2 = await getMove();\r\n      if (response2 && response2.data) {\r\n        let r = response2.data.row;\r\n        let c = response2.data.col;\r\n        updatedBoard[r][c] = 2;\r\n        setBoard(updatedBoard);\r\n        if (response2) {\r\n          if (response2.data.termination !== -1) {\r\n            setTimeout(() => {\r\n              setBoard([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\r\n              setMove(0);\r\n            }, 2000);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n  }\r\n  const handleCellClick = async (row: number, col: number) => {\r\n    if (board[row][col] !== 0) {\r\n      alert(\"andha hai kya laude\");\r\n      return;\r\n    }\r\n    if (playFirst === \"None\") {\r\n      alert(\"choose bitch!\");\r\n      return;\r\n    } else if (playFirst === \"user\" || playFirst === \"agent\") {\r\n      setMove(move + 1);\r\n      const response1 = await sendMove(row, col, move);\r\n      const updatedBoard = [...board];\r\n      updatedBoard[row][col] = 1; // 1 for 'O', 2 for 'X'\r\n      if (response1) {\r\n        if (response1.data.termination !== -1) {\r\n          setTimeout(() => {\r\n            setBoard([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\r\n            setMove(0);\r\n          }, 1000);\r\n          return;\r\n        }\r\n      }\r\n      console.log(\"new move fetched!!\");\r\n      setMove(move + 1);\r\n      const response2 = await getMove();\r\n      if (response2 && response2.data) {\r\n        let r = response2.data.row;\r\n        let c = response2.data.col;\r\n        updatedBoard[r][c] = 2;\r\n        setBoard(updatedBoard);\r\n        if (response2) {\r\n          if (response2.data.termination !== -1) {\r\n            setTimeout(() => {\r\n              setBoard([Array(3).fill(0), Array(3).fill(0), Array(3).fill(0)]);\r\n              setMove(0);\r\n            }, 1000);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"developer iss game ka chutiya hai\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"buttons\">\r\n        <button\r\n          className={`button ${disabledButton1 ? \"disabled\" : \"\"}`}\r\n          onClick={() => {\r\n            setPlayfirst(\"user\");\r\n            setDisabledButton2(true);\r\n          }}\r\n          disabled={disabledButton1}\r\n        >\r\n          Play First\r\n        </button>\r\n        <button\r\n          className={`button ${disabledButton2 ? \"disabled\" : \"\"}`}\r\n          onClick={() => {\r\n            if (!disabledButton2) {\r\n              setPlayfirst(\"agent\");\r\n              handlePlaySecond();\r\n              setDisabledButton1(true);\r\n            }\r\n          }}\r\n          disabled={disabledButton2}\r\n        >\r\n          Play Second\r\n        </button>\r\n      </div>\r\n      <div className=\"center\">\r\n        <div className=\"game-grid\">\r\n          {board.map((row, rowIndex) => (\r\n            <div key={rowIndex} className=\"row\">\r\n              {row.map((cell, colIndex) => (\r\n                <div\r\n                  key={colIndex}\r\n                  className={`cell ${\r\n                    cell === 1 ? \"circle\" : cell === 2 ? \"cross\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleCellClick(rowIndex, colIndex)}\r\n                >\r\n                  {cell === 1 && \"O\"}\r\n                  {cell === 2 && \"X\"}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}